#version 150

uniform sampler2D tex;
uniform samplerCube skybox;
uniform sampler2D rtex;

uniform vec3 lightPos;
uniform vec3 eyePos;

//true = reflective, false=refractive
uniform float reflective;

in vec2 v_texcoord;
in vec3 v_normal;
in vec3 v_worldPos;

out vec4 color;

void main(){
    vec3 N = normalize(v_normal);
    vec3 L = normalize(lightPos - v_worldPos);
    vec3 V = normalize(eyePos - v_worldPos);
    vec3 R;
    if( reflective != 0.0 )
        R = reflect( -V,N );
    else
        R = refract(-L,N, 1.0/1.333);
    
    float diffuse = clamp( dot(N,L), 0.0, 1.0 );
    
    vec4 dcolor = texture(tex,v_texcoord);
    dcolor.rgb *= diffuse;
    vec4 rcolor = texture(skybox,R);
    //greyscale texture
    float reflamt = texture(rtex,v_texcoord).r;
    color = mix(dcolor,rcolor,reflamt);
    color.a = dcolor.a;
	if(color.a < 0.01)
		discard;
}
